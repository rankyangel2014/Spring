/**
 * generated by JNGU-2012-ExtPlugins.
 * please  write here  com.jsjn.panda.extPage.NewService's method:
 * Javascript class static method be used as ExtJs's event method handler,like 'com.jsjn.panda.extPage.NewService.method(); this is Class static method'
 * Javasctipt object method be used as get or set object's properties,like 'com.jsjn.panda.extPage.NewService.prototype.method(); this is object's method'
 * com.jsjn.panda.extPage.NewService.PANEL is com.jsjn.panda.extPage.NewService's  Singleton instance object .
 * you can get com.jsjn.panda.extPage.NewService.PANEL's reference  by appfram.getInstance('com.jsjn.panda.extPage.NewService'). 
 */
var subWin;
var combo;
var textField;
//保存后台java端拥有的bean类型，作为参数类型下拉框的数据集
var types;

var modify;

appframe.afterInstance("com.jsjn.panda.extPage.NewService",function(p){
	Ext.util.Format.comboRenderer = function(combo){
	    return function(value){
	        var record = combo.findRecord(combo.displayField, value);
	        return record ? record.get(combo.displayField) : combo.valueNotFoundText;
	    }
	}
	
	modify =  appConfig.Param.modify == 'true' ? true : false;
	initSubwin();
	
	combo = new Ext.form.ComboBox({
	    typeAhead: true,
	    triggerAction: 'all',
	    lazyRender:true,
	    mode: 'local',
	    store: new Ext.data.ArrayStore({
	        id: 0,
	        fields: [
	            'myId',
	            'type'
	        ],
	        data: [['int', 'int'], ['java.lang.String', 'java.lang.String']]
	    }),
	    valueField: 'myId',
	    displayField: 'type'
	});
	textField = new Ext.form.TextField();
	Ext.getCmp("grid").getColumnModel().setEditor(3, textField);
	Ext.getCmp("grid").getColumnModel().setEditor(2, combo);
	//Ext.getCmp("grid").getColumnModel().setRenderer(2, Ext.util.Format.comboRenderer(combo));
	
	subWin = new Ext.Window({
		   title : '参数设置',
		   maximized : false,
		   isTopContainer : true,
		   closable:true,
		   modal : true,
		   resizable : false,
		   maskDisabled:true,
		   contentEl : Ext.DomHelper.append(document.body, {
			name : 'paramEdit',
		    tag : 'iframe',
		    style : "border 0px none;scrollbar:true",
		    src : appConfig.baseUrl+"/com.jsjn.panda.extPage.EditParam.view",
		    height : "250",
		    width : "450"
		   })
	});
	
});


function opRenderer(value, cellmeta, record, rowIndex, columnIndex, store) {
	return "<a href='javascript:void(0)'>修改</a>";
}

function typeRenderer(value, cellmeta, record, rowIndex,
		columnIndex, store) {
	return new Ext.form.ComboBox({
	});
}

function addParam(button, event) {
	//subWin.setVisible(true);
	var index = Ext.getCmp("grid").getStore().getCount() + 1;
	Ext.getCmp("grid").getStore().add([new Ext.data.Record({seq:index, type:'', dscrpt:''})]);
}

function afterEdit(e) {
	e.record.commit();
}

function deleteParam(button, event) {
	var store = Ext.getCmp("grid").getStore();
	var selMod = Ext.getCmp("grid").getSelectionModel( );
//	store.each(function(record) {
//		alert(record.get("checked"));
//	});
	var records = selMod.getSelections( );
	for(var i=0;i<records.length;i++) {
		store.remove(records[i]);
	}
	var index = 1;
	store.each(function(record) {
		record.set("seq", index++);
		record.commit();
	});
}

function cancelBtnClick(button, event) {
	window.parent.newServWin.setVisible(false);
}

//父窗口在打开子窗口前调用
function initSubwin() {
	if(modify == true) {
		var attributes = top.curTreeNode.node.attributes;
		Ext.getCmp("methodName").setValue(attributes.methodName);
		Ext.getCmp("methodName").setReadOnly(true);
		Ext.getCmp("regid").setValue(attributes.regid);
		Ext.getCmp("methodDscrpt").setValue(attributes.dscrpt);
		Ext.getCmp("returnType").setValue(attributes.fh);
		var p = attributes.params;
		if(p && p.total > 0) {
			Ext.getCmp("grid").getStore().loadData(attributes.params);
		} else {
			Ext.getCmp("grid").getStore().removeAll();
		}
		
	} else {
		Ext.getCmp("methodName").setValue("");
		Ext.getCmp("regid").setValue("");
		Ext.getCmp("methodDscrpt").setValue("");
		Ext.getCmp("returnType").setValue("");
		Ext.getCmp("grid").getStore().removeAll();
	}
}

function saveBtnClick(button, event) {
	var method = modify ? "modifyService" : "newService";
	
	var name = Ext.getCmp("methodName").getValue();
	var returnType = Ext.getCmp("returnType").getValue();
	var regid = Ext.getCmp("regid").getValue();
	if(name == "" || name == null) {
		alert("请输入方法名");
		return;
	}
	if(regid == "" || regid == null) {
		alert("请输入服务号");
		return;
	}
	if(returnType == "" || returnType == null) {
		alert("请输入返回值类型");
		return;
	}
	var dscrpt = Ext.getCmp("methodDscrpt").getValue();
	var store = Ext.getCmp("grid").getStore();
	var count = store.getCount( );
	var params = "<params><inputs>";
	for(var i =0;i<count;i++) {
		var r = store.getAt(i);
		var input = "<input index=\""+r.get("seq")+"\" type=\""+r.get("vtype")+"\" dscrpt=\""+r.get("dscrpt")+"\"/>";
		params += input;
	}
	params += "</inputs><output type=\""+returnType+"\" dscrpt=\"\"/></params>";
	//生成service标签下内容，并提交。接收到保存成功响应后，刷新主窗口。
	Ext.Ajax.request({
		   url: appConfig.baseUrl + "/com.jsjn.panda.extPage.ServiceInfo.do",
		   success: function(res) {
//			   var user = eval("(" + res.responseText + ")");
			   alert(res.responseText);
			   parent.location.reload();
		   },
		   failure: function() {
			   alert("failed");
		   },
		   params: { method: method,
			   methodName: name,
			   regid: regid,
			   dscrpt: dscrpt,
			   params: params}
		});
}

function keypress(textfield, e) {
	var code = e.getCharCode();
	if((code>=48 && code<=57) || 
			(code>=65 && code<=90) ||
			code == 95 ||
			(code>=97 && code<=122)) {
		
	} else {
		e.stopEvent();
	}
}

function keypress(textfield, e) {
	Ext.getCmp("regid").setValue(textfield.getValue());
}
function keyup(textfield, e) {
	Ext.getCmp("regid").setValue(textfield.getValue());
}