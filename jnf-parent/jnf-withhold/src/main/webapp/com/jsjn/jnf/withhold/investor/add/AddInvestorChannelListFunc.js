/**
 * generated by JNGU-2012-ExtPlugins. please write here
 * com.jsjn.jnf.withhold.investor.add.AddInvestorChannelList's method:
 * Javascript class static method be used as ExtJs's event method handler,like
 * 'com.jsjn.jnf.withhold.investor.add.AddInvestorChannelList.method(); this is
 * Class static method' Javasctipt object method be used as get or set object's
 * properties,like
 * 'com.jsjn.jnf.withhold.investor.add.AddInvestorChannelList.prototype.method();
 * this is object's method'
 * com.jsjn.jnf.withhold.investor.add.AddInvestorChannelList.main method is the
 * beginning of all.
 * com.jsjn.jnf.withhold.investor.add.AddInvestorChannelList.WINDOW
 * iscom.jsjn.jnf.withhold.investor.add.AddInvestorChannelList's Singleton
 * instance object . you can get
 * com.jsjn.jnf.withhold.investor.add.AddInvestorChannelList.WINDOW reference by
 * appfram.getInstance('com.jsjn.jnf.withhold.investor.add.AddInvestorChannelList').
 */
var AddInvestorChannelListInsttuId = '';
appframe.afterInstance(
		'com.jsjn.jnf.withhold.investor.add.AddInvestorChannelList', function(
				panel) {
			if (panel) {

				// 渲染下拉框
				Ext.apply(Ext.getCmp('businessType.AddInvestorChannelList'), {
							store : businessTypeStore.getStore()
						});
			}
		});

/**
 * 下拉grid选择单行的响应函数
 * 
 * @param {}
 *            combo
 * @param {}
 *            newValue
 * @param {}
 *            oldValue
 */
com.jsjn.jnf.withhold.investor.add.AddInvestorChannelList.selectRow = function(
		combo, newValue, oldValue) {
	AddInvestorChannelListInsttuId = newValue;
};
com.jsjn.jnf.withhold.investor.add.AddInvestorChannelList.close = function() {
	addWin.hide();
};
com.jsjn.jnf.withhold.investor.add.AddInvestorChannelList.add = function() {
	var insttuNm = Ext.getCmp('insttuNm.AddInvestorChannelList').getValue();
	var channel = Ext.getCmp('channel.AddInvestorChannelList').getValue();
	var bindAccNo = Ext.getCmp('bindAccNo.AddInvestorChannelList').getValue();
	var key = Ext.getCmp('key.AddInvestorChannelList').getValue();
	var cardNo = Ext.getCmp('cardNo.AddInvestorChannelList').getValue();
	var transCardNo = Ext.getCmp('paymentCardNo.AddInvestorChannelList')
			.getValue();
	var transCardName = Ext.getCmp('paymentCardName.AddInvestorChannelList')
			.getValue();
	var businessType = Ext.getCmp('businessType.AddInvestorChannelList')
			.getValue();

	if (valueIsEmpty(insttuNm)) {
		Ext.Msg.alert('系统提示', '机构名称不能为空!');
		return false;
	}
	if (valueIsEmpty(channel)) {
		Ext.Msg.alert('系统提示', '渠道不能为空!');
		return false;
	}
	if (channel != 'CH13' && valueIsEmpty(bindAccNo)) {
		Ext.Msg.alert('系统提示', '商户号不能为空!');
		return false;
	}
	if (channel != 'CH13' && valueIsEmpty(cardNo)) {
		Ext.Msg.alert('系统提示', '提现卡号不能为空!');
		return false;
	}
	if (channel == 'CH13') {
		if (valueIsEmpty(transCardName)) {
			Ext.Msg.alert('系统提示', '支付银行卡户名不能为空!');
			return false;
		}
		if (valueIsEmpty(transCardNo)) {
			Ext.Msg.alert('系统提示', '支付银行卡卡号不能为空!');
			return false;
		}
	}
	if (channel == 'CH11') {
		if (valueIsEmpty(key)) {
			Ext.Msg.alert('系统提示', '【天下支付】秘钥不能为空!');
			return false;
		}
	}

	Ext.Ajax.request({
				params : {
					key : key,
					custId : AddInvestorChannelListInsttuId,
					custName : insttuNm,
					channelId : channel,
					bindAccNo : bindAccNo,
					cardNo : cardNo,
					mId : appConfig.Param.mid,
					transCardName : transCardName,
					transCardNo : transCardNo,
					businessType : businessType
				},
				method : "POST",
				url : appConfig.baseUrl
						+ '/WithholdController.do?method=saveWithhold',
				waitMsg : '正在处理数据...',
				waitTitle : '提示',
				success : function(response) {
					var result = Ext.decode(response.responseText);

					if (result.success) {
						// 刷新列表
						Ext.MessageBox.alert('提示', '新增成功！');
						Ext.getCmp("grid.QryInvestorChannelList").getStore()
								.load();
						addWin.hide();
					} else {

						Ext.MessageBox.alert('提示', '操作失败！' + result.errMsg);
					}

				}
			});

};

/**
 * 改变业务类型响应函数
 * 
 * @param {}
 *            combo
 * @param {}
 *            record
 * @param {}
 *            index
 */
com.jsjn.jnf.withhold.investor.add.AddInvestorChannelList.changeBusinessType = function(
		combo, record, index) {
	var businessType = record.get('paramKey');

	var form3 = Ext.getCmp('form3.AddInvestorChannelList');
	var form4 = Ext.getCmp('form4.AddInvestorChannelList');
	var form5 = Ext.getCmp('form5.AddInvestorChannelList');
	var form6 = Ext.getCmp('form6.AddInvestorChannelList');
	var form7 = Ext.getCmp('form7.AddInvestorChannelList');
	if (businessType == '2') {// 代付
		form3.setVisible(false);
		form4.setVisible(false);
		form5.setVisible(false);
		form6.setVisible(true);
		form7.setVisible(true);
	} else {
		form3.setVisible(true);
		form4.setVisible(true);
		form5.setVisible(true);
		form6.setVisible(false);
		form7.setVisible(false);
	}
	var store = Ext.getCmp('channel.AddInvestorChannelList').store;
	Ext.getCmp('channel.AddInvestorChannelList').clearValue();
	store.baseParams = {
		'businessType' : businessType
	};
	store.load();
}

com.jsjn.jnf.withhold.investor.add.AddInvestorChannelList.changeChannel = function(
		combo, record, index) {
	var channelType = record.get('paramKey');
	if (channelType == 'CH10') {
		Ext.getCmp('key.AddInvestorChannelList').label.dom.innerHTML='密&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;钥:'
	}
	if (channelType == 'CH11') {
		Ext.getCmp('key.AddInvestorChannelList').label.dom.innerHTML='<font color=red>*</font>密&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;钥:'
	}
	
}