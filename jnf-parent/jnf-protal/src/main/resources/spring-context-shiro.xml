<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context-3.0.xsd"
	default-lazy-init="true">

	<description>Shiro Configuration</description>
	<!-- Realm实现 -->  
	<bean id="statelessRealm"   
		class="com.jsjn.jnf.protal.security.StatelessRealm">  
		<property name="cachingEnabled" value="false"/>  
	</bean>  
	
	<!-- Subject工厂 -->  
	<bean id="subjectFactory"   
		class="com.jsjn.jnf.protal.security.mgt.StatelessDefaultSubjectFactory"/>  
		
	<!-- 会话管理器 -->  
	<bean id="sessionManager" class="org.apache.shiro.session.mgt.DefaultSessionManager">  
		<property name="sessionValidationSchedulerEnabled" value="false"/>  
	</bean>  
	
	<!-- 安全管理器 -->  
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">  
		<property name="realm" ref="statelessRealm"/>  
		<property name="subjectDAO.sessionStorageEvaluator.sessionStorageEnabled"  
			value="false"/>  
		<property name="subjectFactory" ref="subjectFactory"/>  
		<property name="sessionManager" ref="sessionManager"/>  
	</bean>  
	
	<!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->  
	<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">  
		<property name="staticMethod"   
			value="org.apache.shiro.SecurityUtils.setSecurityManager"/>  
		<property name="arguments" ref="securityManager"/>  
	</bean> 
	
	<bean id="statelessAuthcFilter"   
		class="com.jsjn.jnf.protal.security.StatelessAuthcFilter"/>  
	
	<!-- Shiro的Web过滤器 -->  
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">  
		<property name="securityManager" ref="securityManager"/>  
		<property name="filters">  
			<map>
				<entry key="statelessAuthc" value-ref="statelessAuthcFilter"/>  
			</map>
		</property>  
		<property name="filterChainDefinitions">  
			<value>  
         	 /api/** = statelessAuthc
			 /** = anon
			</value>  
		</property>  
	</bean>
	
	
	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
	
	<!-- AOP式方法级权限检查  -->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
    	<property name="securityManager" ref="securityManager"/>
	</bean>
	
</beans>